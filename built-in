#include "main.h"

/**
 * exit_cmd - closes command window
 * @struct: Structure 
 *
 *  Return: 0
 */
int exit_cmd(struct_t *struct)
{
	int exitcheck;

	if (struct->argv[1])  /* If there is an exit arguement */
	{
		exitcheck = _erratoi(struct->argv[1]);
		if (exitcheck == -1)
		{
			struct->status = 2;
			print_error(struct, "Illegal number: ");
			_eputs(struct->argv[1]);
			_eputchar('\n');
			return (1);
		}
		struct->err_num = _erratoi(struct->argv[1]);
		return (-2);
	}
	struct->err_num = -1;
	return (-2);
}

/**
 * curr_cd - current directory
 * @struct: Structure 
 * 
 *  Return: 0
 */
int curr_cd(struct_t *struct)
{
	char *s, *dir, buffer[1024];
	int chdir_ret;

	s = getcwd(buffer, 1024);
	if (!s)
		_puts("TODO: >>getcwd failure message <<\n");
	if (!struct->argv[1])
	{
		dir = _getenv(struct, "HOME=");
		if (!dir)
			chdir_ret = /* TODO: what is it? */
				chdir((dir = _getenv(struct, "PWD=")) ? dir : "/");
		else
			chdir_ret = chdir(dir);
	}
	else if (_strcmp(struct->argv[1], "-") == 0)
	{
		if (!_getenv(struct, "OLDPWD="))
		{
			_puts(s);
			_putchar('\n');
			return (1);
		}
		_puts(_getenv(struct, "OLDPWD=")), _putchar('\n');
		chdir_ret = /* TODO: what is it? */
			chdir((dir = _getenv(struct, "OLDPWD=")) ? dir : "/");
	}
	else
		chdir_ret = chdir(struct->argv[1]);
	if (chdir_ret == -1)
	{
		print_error(struct, "can't cd to ");
		_eputs(struct->argv[1]), _eputchar('\n');
	}
	else
	{
		_setenv(struct, "OLDPWD", _getenv(struct, "PWD="));
		_setenv(struct, "PWD", getcwd(buffer, 1024));
	}
	return (0);
}

/**
 * curr_dir - current directory
 * @struct: Structure
 * 
 *  Return: 0
 */
int curr_dir(struct_t *struct)
{
	char **arg_array;

	arg_array = struct->argv;
	_puts("help. Function not done \n");
	if (0)
		_puts(*arg_array); /* temp att_unused */
	return (0);
}
